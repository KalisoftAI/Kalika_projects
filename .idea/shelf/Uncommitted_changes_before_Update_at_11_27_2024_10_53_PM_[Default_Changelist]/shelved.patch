Index: Kalika_projects-main/Kalika E-commerce/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># from punchout import *\r\nimport secrets\r\nimport psycopg2\r\nfrom flask import Flask, render_template, request, redirect, url_for, jsonify,  flash, session\r\nfrom login import login1\r\nfrom register import register1\r\nfrom addtocart import add_cart\r\nfrom checkout import check\r\nfrom products import products1\r\nfrom cart import cart1\r\nfrom main import punchout\r\nimport logging\r\n\r\nfrom db import get_db_connection\r\n\r\nfrom flask_session import Session\r\n\r\napp = Flask(__name__)\r\napp.config['SESSION_TYPE'] = 'filesystem'  # Store session data on the filesystem\r\nSession(app)\r\n\r\n\r\napp.register_blueprint(login1)\r\napp.register_blueprint(register1)\r\napp.register_blueprint(add_cart)\r\napp.register_blueprint(check)\r\napp.register_blueprint(products1)\r\napp.register_blueprint(cart1)\r\napp.register_blueprint(punchout)\r\n\r\n\r\n# Set a random secret key for session management\r\napp.secret_key = secrets.token_hex(16)  # Generates a random 32-character hex string\r\n\r\n\r\n@app.route('/')\r\ndef home():\r\n    # return render_template('index.html')\r\n    categories = fetch_productcatalog_data()\r\n    return render_template('index.html', categories=categories)\r\n\r\n\r\n@app.route('/search', methods=['GET'])\r\ndef search():\r\n    term = request.args.get('q', '')  # Get the search term from query params\r\n    if not term:\r\n        return jsonify([])  # Return empty list if no search term is provided\r\n\r\n    conn = get_db_connection()\r\n    cur = conn.cursor()\r\n\r\n    # Execute the SQL query to search for products matching the term\r\n    cur.execute(\"\"\"\r\n        SELECT itemcode, productname, subcategory, price \r\n        FROM productcatalog \r\n        WHERE productname ILIKE %s\r\n    \"\"\", (f\"%{term}%\",))  # Case-insensitive match\r\n    results = cur.fetchall()\r\n    # print(\"results:\", results)\r\n\r\n    cur.close()\r\n    return jsonify([{\r\n        \"itemcode\": row[0],\r\n        \"name\": row[1],\r\n        \"subcategory\": row[2],\r\n        \"price\": row[3]\r\n    } for row in results])\r\n\r\n\r\n@app.route('/product/<itemcode>', methods=['GET'])\r\ndef get_product_details(itemcode):\r\n    print(\"Fetching product details\")\r\n    conn = get_db_connection()\r\n    cur = conn.cursor()\r\n    cur.execute(\"\"\"\r\n        SELECT itemcode, productname, subcategory, price, productdescription \r\n        FROM productcatalog \r\n        WHERE itemcode = %s\r\n    \"\"\", (itemcode,))\r\n    result = cur.fetchone()\r\n    print(\"results:\",result[0],itemcode)\r\n    # cur.close()\r\n\r\n    if result:\r\n        # return jsonify({\r\n        #     \"itemcode\": result[0],\r\n        #     \"name\": result[1],\r\n        #     \"subcategory\": result[2],\r\n        #     \"price\": result[3],\r\n        #     \"description\": result[4]\r\n        # })\r\n        return render_template('product.html',\r\n                                   itemcode=result[0],\r\n                                   name=result[1],\r\n                                   subcategory=result[2],\r\n                                   price=result[3],\r\n                                   description=result[4])\r\n    else:\r\n        # logging.warning(f\"Product not found for itemcode: {itemcode}\")\r\n        return jsonify({\"error\": \"Product not found\"}), 404\r\n\r\n@app.route('/product/<string:itemcode>')\r\ndef get_product(itemcode):\r\n    conn = get_db_connection()\r\n    cursor = conn.cursor()\r\n\r\n    # Fetch product details by item code\r\n    query = \"\"\"\r\n        SELECT itemcode, productname AS name, productdescription AS description, price, subcategory \r\n        FROM productcatalog \r\n        WHERE itemcode = %s;\r\n    \"\"\"\r\n    cursor.execute(query, (itemcode,))\r\n    product = cursor.fetchone()\r\n\r\n    cursor.close()\r\n    conn.close()\r\n\r\n    if product:\r\n        return jsonify({\r\n            \"itemcode\": product[0],\r\n            \"name\": product[1],\r\n            \"description\": product[2],\r\n            \"price\": str(product[3]),  # Ensure price is a string\r\n            \"subcategory\": product[4]\r\n        })\r\n    else:\r\n        return jsonify({\"error\": \"Product not found\"}), 404\r\n\r\n\r\n# Route to display products by category\r\n@app.route('/<string:maincategory>')\r\ndef show_category_products(maincategory):\r\n    conn = get_db_connection()\r\n    cursor = conn.cursor()\r\n\r\n    # Fetch products by category\r\n    query = \"\"\"\r\n        SELECT itemcode, productname, subcategory, price \r\n        FROM productcatalog \r\n        WHERE maincategory = %s;\r\n    \"\"\"\r\n    cursor.execute(query, (maincategory,))\r\n    productcatalog = cursor.fetchall()\r\n\r\n    # Convert fetched data to a list of dictionaries\r\n    product_list = [\r\n        {'itemcode': row[0], 'productname': row[1], 'subcategory': row[2], 'price': row[3]}\r\n        for row in productcatalog\r\n    ]\r\n    # print\r\n\r\n    cursor.close()\r\n    conn.close()\r\n\r\n    # Render the HTML template with fetched products\r\n    return render_template('category.html',\r\n                           maincategory=maincategory,\r\n                           products=product_list)\r\n\r\n\r\n# Route to display products by subcategory\r\n@app.route('/<string:maincategory>/<string:subcategory>')\r\ndef show_products(maincategory, subcategory):\r\n    conn = get_db_connection()\r\n    cursor = conn.cursor()\r\n\r\n    # Fetch products based on category and subcategory\r\n    query = \"\"\"\r\n        SELECT itemcode, productname, productdescription, price \r\n        FROM productcatalog \r\n        WHERE maincategory = %s AND subcategory = %s;\r\n    \"\"\"\r\n    cursor.execute(query, (maincategory, subcategory))\r\n    productcatalog = cursor.fetchall()\r\n\r\n    # Convert fetched data to a list of dictionaries\r\n    product_list = [\r\n        {'itemcode': row[0], 'productname': row[1], 'productdescription': row[2], 'price': row[3]}\r\n        for row in productcatalog\r\n    ]\r\n\r\n    cursor.close()\r\n    conn.close()\r\n\r\n    # Render the HTML template with the fetched products\r\n    return render_template('subcategory.html',\r\n                           maincategory=maincategory,\r\n                           subcategory=subcategory,\r\n                           products=product_list)\r\n\r\n\r\n# Close the database connection on app teardown\r\n@app.teardown_appcontext\r\ndef close_connection(exception):\r\n    connection = get_db_connection()\r\n    cursor = connection.cursor()\r\n    cursor.close()\r\n    connection.close()\r\n\r\n\r\ndef fetch_productcatalog_data():\r\n    try:\r\n        # Connect to the PostgreSQL database\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor()\r\n\r\n        # Query to fetch maincategory and subcategory data from productcatalog\r\n        cursor.execute(\"\"\"\r\n            SELECT maincategory, subcategory\r\n            FROM productcatalog LIMIT 15\r\n\r\n        \"\"\")\r\n        rows = cursor.fetchall()\r\n\r\n        # Organize the data into a dictionary\r\n        category_data = {}\r\n        for maincategory, subcategory in rows:\r\n            if maincategory not in category_data:\r\n                category_data[maincategory] = []\r\n            if subcategory not in category_data[maincategory]:\r\n                category_data[maincategory].append(subcategory)\r\n\r\n        # Close the database connection\r\n        cursor.close()\r\n        connection.close()\r\n\r\n        return category_data\r\n\r\n    except Exception as e:\r\n        print(f\"Error fetching product catalog data: {e}\")\r\n        return {}\r\n\r\n\r\n# Example usage\r\ncategories = fetch_productcatalog_data()\r\n# print(categories)\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kalika_projects-main/Kalika E-commerce/app.py	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ Kalika_projects-main/Kalika E-commerce/app.py	(date 1732728057942)
@@ -1,7 +1,7 @@
 # from punchout import *
 import secrets
 import psycopg2
-from flask import Flask, render_template, request, redirect, url_for, jsonify,  flash, session
+from flask import Flask, render_template, request, redirect, url_for, jsonify,  flash, session, send_from_directory
 from login import login1
 from register import register1
 from addtocart import add_cart
@@ -9,13 +9,15 @@
 from products import products1
 from cart import cart1
 from main import punchout
+import csv
+from urllib.parse import quote
 import logging
 
 from db import get_db_connection
 
 from flask_session import Session
 
-app = Flask(__name__)
+app = Flask(__name__, static_folder='static')
 app.config['SESSION_TYPE'] = 'filesystem'  # Store session data on the filesystem
 Session(app)
 
@@ -78,55 +80,50 @@
         WHERE itemcode = %s
     """, (itemcode,))
     result = cur.fetchone()
-    print("results:",result[0],itemcode)
-    # cur.close()
+    print("results:", result[1])
+    cur.close()
 
     if result:
-        # return jsonify({
-        #     "itemcode": result[0],
-        #     "name": result[1],
-        #     "subcategory": result[2],
-        #     "price": result[3],
-        #     "description": result[4]
-        # })
-        return render_template('product.html',
-                                   itemcode=result[0],
-                                   name=result[1],
-                                   subcategory=result[2],
-                                   price=result[3],
-                                   description=result[4])
-    else:
-        # logging.warning(f"Product not found for itemcode: {itemcode}")
-        return jsonify({"error": "Product not found"}), 404
-
-@app.route('/product/<string:itemcode>')
-def get_product(itemcode):
-    conn = get_db_connection()
-    cursor = conn.cursor()
-
-    # Fetch product details by item code
-    query = """
-        SELECT itemcode, productname AS name, productdescription AS description, price, subcategory 
-        FROM productcatalog 
-        WHERE itemcode = %s;
-    """
-    cursor.execute(query, (itemcode,))
-    product = cursor.fetchone()
-
-    cursor.close()
-    conn.close()
-
-    if product:
         return jsonify({
-            "itemcode": product[0],
-            "name": product[1],
-            "description": product[2],
-            "price": str(product[3]),  # Ensure price is a string
-            "subcategory": product[4]
+            "itemcode": result[0],
+            "name": result[1],
+            "subcategory": result[2],
+            "price": result[3],
+            "description": result[4]
         })
     else:
+        # logging.warning(f"Product not found for itemcode: {itemcode}")
         return jsonify({"error": "Product not found"}), 404
 
+# Route to display products by category
+# @app.route('/<string:maincategory>')
+# def show_category_products(maincategory):
+#     conn = get_db_connection()
+#     cursor = conn.cursor()
+#
+#     # Fetch products by category
+#     query = """
+#         SELECT itemcode, productname, subcategory, price
+#         FROM productcatalog
+#         WHERE maincategory = %s;
+#     """
+#     cursor.execute(query, (maincategory,))
+#     productcatalog = cursor.fetchall()
+#
+#     # Convert fetched data to a list of dictionaries
+#     product_list = [
+#         {'itemcode': row[0], 'productname': row[1], 'subcategory': row[2], 'price': row[3]}
+#         for row in productcatalog
+#     ]
+#     # print
+#
+#     cursor.close()
+#     conn.close()
+#
+#     # Render the HTML template with fetched products
+#     return render_template('category.html',
+#                            maincategory=maincategory,
+#                            products=product_list)
 
 # Route to display products by category
 @app.route('/<string:maincategory>')
@@ -136,8 +133,8 @@
 
     # Fetch products by category
     query = """
-        SELECT itemcode, productname, subcategory, price 
-        FROM productcatalog 
+        SELECT itemcode, productname, subcategory, price, image_url
+        FROM product_catlog_image_url
         WHERE maincategory = %s;
     """
     cursor.execute(query, (maincategory,))
@@ -145,7 +142,7 @@
 
     # Convert fetched data to a list of dictionaries
     product_list = [
-        {'itemcode': row[0], 'productname': row[1], 'subcategory': row[2], 'price': row[3]}
+        {'itemcode': row[0], 'productname': row[1], 'subcategory': row[2], 'price': row[3], 'image_url': row[4]}
         for row in productcatalog
     ]
     # print
@@ -158,6 +155,39 @@
                            maincategory=maincategory,
                            products=product_list)
 
+# Route to display products by category
+# @app.route('/<string:maincategory>')
+# def show_category_products(maincategory):
+#     product_list = []
+#
+#     # Read products from the CSV file
+#     with open('imagedata1.csv', mode='r', encoding='utf-8') as csvfile:
+#         csv_reader = csv.DictReader(csvfile)
+#         # Skip the first row
+#         # next(csv_reader, None)
+#
+#         for row in csv_reader:
+#             # Filter products by main category
+#             if row['Main Category'] == maincategory:
+#                 product_list.append({
+#                     'itemcode': row['Item Code'],
+#                     'productname': row['Product Title'],
+#                     'subcategory': row['Sub Categories'],
+#                     'price': float(row['Price']),
+#                     'image_url': url_for('static', filename=f'images/{row["Large Image"]}')
+#
+#                 })
+#
+#     # print("Product details:", product_list)
+#
+#     # Render the HTML template with fetched products
+#     return render_template('category.html',
+#                            maincategory=maincategory,
+#                            products=product_list)
+
+
+
+
 
 # Route to display products by subcategory
 @app.route('/<string:maincategory>/<string:subcategory>')
@@ -167,8 +197,8 @@
 
     # Fetch products based on category and subcategory
     query = """
-        SELECT itemcode, productname, productdescription, price 
-        FROM productcatalog 
+        SELECT itemcode, productname, productdescription, price, image_url
+        FROM product_catlog_image_url 
         WHERE maincategory = %s AND subcategory = %s;
     """
     cursor.execute(query, (maincategory, subcategory))
@@ -176,7 +206,7 @@
 
     # Convert fetched data to a list of dictionaries
     product_list = [
-        {'itemcode': row[0], 'productname': row[1], 'productdescription': row[2], 'price': row[3]}
+        {'itemcode': row[0], 'productname': row[1], 'productdescription': row[2], 'price': row[3], 'image_url': row[4]}
         for row in productcatalog
     ]
 
@@ -208,7 +238,7 @@
         # Query to fetch maincategory and subcategory data from productcatalog
         cursor.execute("""
             SELECT maincategory, subcategory
-            FROM productcatalog LIMIT 15
+            FROM product_catlog_image_url LIMIT 15
 
         """)
         rows = cursor.fetchall()
Index: Kalika_projects-main/Kalika E-commerce/templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <title>Kalika Industrial eCommerce</title>\r\n    <meta charset=\"utf-8\">\r\n    <link rel=\"icon\" type=\"../static/image/x-icon\" href=\"../static/image/logo.png\">\r\n    <script src=\"https://kit.fontawesome.com/yourcode.js\" crossorigin=\"anonymous\"></script>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta name=\"description\" content=\"Your go-to platform for industrial machinery, tools, and equipment.\">\r\n    <meta name=\"keywords\" content=\"industrial, machinery, B2B, tools, heavy equipment\">\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css\" integrity=\"sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n\r\n    <!-- Link to CSS file -->\r\n    <link rel=\"stylesheet\" href=\"../static/style.css\">\r\n\r\n\r\n\r\n    <!-- External Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&family=Open+Sans:wght@400;700&display=swap\" rel=\"stylesheet\">\r\n  </head>\r\n\r\n  <body>\r\n\r\n    <!-- HEADER START -->\r\n    <header>\r\n      <div class=\"container\">\r\n        <nav class=\"navbar\">\r\n          <ul class=\"navbar-nav\">\r\n            <li class=\"dropdown1\">\r\n                <a href=\"#\" class=\"btn-categories\">\r\n                    <div class=\"all-categories\">\r\n                          <i class=\"fa fa-list\"></i> All Categories\r\n                        </div>\r\n\r\n                </a>\r\n                <ul class=\"dropdown-menu\">\r\n                    {% for maincategory, subcategories in categories.items() %}\r\n                        <li>\r\n                            <!-- Link to maincategory page -->\r\n                            <a href=\"{{ url_for('show_category_products', maincategory=maincategory) }}\" target=\"_blank\">\r\n                                {{ maincategory }}\r\n                            </a>\r\n                            <ul class=\"dropdown-submenu\">\r\n                                {% for subcategory in subcategories %}\r\n                                    <li>\r\n                                        <!-- Link to subcategory page within maincategory -->\r\n                                        <a href=\"{{ url_for('show_products', maincategory=maincategory, subcategory=subcategory) }}\" target=\"_blank\">\r\n                                            {{ subcategory }}\r\n                                        </a>\r\n                                    </li>\r\n                                {% endfor %}\r\n                            </ul>\r\n                        </li>\r\n                    {% endfor %}\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n          <div class=\"navbar-logo\">\r\n            <a href=\"index.html\">\r\n              <img src=\"../static/image/logo.png\" alt=\"Industrial eCommerce Logo\" class=\"logo-image\">\r\n            </a>\r\n          </div>\r\n          <div class=\"header-actions\">\r\n            <input\r\n                type=\"text\"\r\n                class=\"search-bar\"\r\n                id=\"searchInput\"\r\n                placeholder=\"Search for products...\"\r\n            />\r\n            <button>\r\n                <i class=\"fa fa-search\"></i> Search\r\n            </button>\r\n            <ul id=\"searchResults\"></ul>\r\n                  <!-- Product details section (initially hidden) -->\r\n                <div id=\"product-details\" style=\"display:none;\">\r\n                    <h2 id=\"product-name\"></h2>\r\n                    <p id=\"product-description\"></p>\r\n                    <p id=\"product-price\"></p>\r\n                    <button id=\"add-to-cart\">Add to Cart</button>\r\n                </div>\r\n        </div>\r\n\r\n\r\n<!--            <input-->\r\n<!--                type=\"text\"-->\r\n<!--                placeholder=\"Search products...\"-->\r\n<!--                class=\"search-bar\"-->\r\n<!--                id=\"searchInput\"-->\r\n<!--            >-->\r\n<!--            <button>-->\r\n<!--                <i class=\"fa fa-search\"></i> Search-->\r\n<!--            </button>-->\r\n\r\n\r\n            <a href=\"{{ url_for('cart1.cart') }}\" class=\"btn-login\">\r\n              <i class=\"fa fa-shopping-cart\"></i>\r\n              (<span class=\"cart-count\"></span>)\r\n\r\n          </a>\r\n\r\n          <a href=\"{{ url_for('login1.login') }}\" class=\"btn-login\">\r\n              <i class=\"fa fa-user\"></i> Login</a>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n      <!-- HEADER END -->\r\n\r\n\r\n\r\n\r\n\r\n      <!-- HERO SECTION START -->\r\n    <section class=\"hero\">\r\n      <div class=\"container\">\r\n          <h1>Top Industrial Equipment for Your Business</h1>\r\n          <p>We provide high-quality industrial machinery, tools, and safety gear for manufacturers, construction companies, and B2B vendors.</p>\r\n          <!-- <a href=\"shop.html\" class=\"btn-primary\">Shop Now</a> -->\r\n      </div>\r\n    </section>\r\n      <!-- HERO SECTION END -->\r\n      <!-- CATEGORY  -->\r\n        <section class=\"py-5 overflow-hidden\">\r\n      <div class=\"container-lg\">\r\n          <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n\r\n                  <div class=\"section-header d-flex flex-wrap justify-content-between mb-5\">\r\n                  <h2 class=\"section-title\">Category</h2>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n          <div class=\"category-carousel swiper\">\r\n            <div class=\"swiper-wrapper\">\r\n              <a href=\"category\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/Safety.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Safety</h4>\r\n              </a>\r\n              <a href=\"category.html\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/Janitorial.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Janitorial</h4>\r\n              </a>\r\n              <a href=\"category.html\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/Packaging.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Packaging</h4>\r\n              </a>\r\n              <a href=\"category.html\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/Proactive-Maintenance.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Facility Maintenance</h4>\r\n              </a>\r\n              <a href=\"category.html\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/lubricant.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Chemical & Lubricant</h4>\r\n              </a>\r\n              <a href=\"category.html\" class=\"nav-link swiper-slide text-center\">\r\n                <img src=\"../static/image/abrasives.jpg\" class=\"rounded-circle\" alt=\"Category Thumbnail\">\r\n                <h4 class=\"fs-6 mt-3 fw-normal category-title\">Abrasives</h4>\r\n              </a>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n    <!-- PRODUCT SECTION START -->\r\n  <div class=\"container\">\r\n    <h2>Featured Products</h2>\r\n    <div class=\"product-grid\">\r\n        <!-- Product Item 1 -->\r\n        <form action=\"{{ url_for('add_cart.add_to_cart') }}\" method=\"POST\">\r\n        <div class=\"product-card\">\r\n          <img src=\"../static/image/lathe.jfif\" alt=\"Industrial Lathe Machine\">\r\n          <div class=\"product-info\">\r\n            <h3>Industrial Lathe Machine</h3>\r\n            <p>Precision-engineered lathe, perfect for metalworking. Power: 220V/380V</p>\r\n            <span class=\"price\">RS.5,000</span>\r\n\r\n            <input type=\"hidden\" name=\"product_name\" value=\"Industrial Lathe Machine\">\r\n            <input type=\"hidden\" name=\"product_price\" value=\"5000\">\r\n            <div class=\"product-actions\">\r\n              <button class=\"add-to-cart\" data-name=\"Industrial Lathe Machine\" data-price=\"5000\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n        <!-- Product Item 2 -->\r\n        <form action=\"{{ url_for('add_cart.add_to_cart') }}\" method=\"POST\">\r\n        <div class=\"product-card\">\r\n          <img src=\"../static/image/lathe.jfif\" alt=\"Hydraulic Press \">\r\n          <div class=\"product-info\">\r\n            <h3>Hydraulic PUMP</h3>\r\n            <p>100-ton capacity press, built for heavy-duty operations.</p>\r\n            <span class=\"price\">RS.12,000</span>\r\n            <input type=\"hidden\" name=\"product_name\" value=\"Hydraulic PUMP\">\r\n            <input type=\"hidden\" name=\"product_price\" value=\"12000\">\r\n            <div class=\"product-actions\">\r\n              <button class=\"add-to-cart\" data-name=\"Hydraulic PUMP\" data-price=\"2000\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </form>\r\n        <!-- Product Item 3 -->\r\n        <form action=\"{{ url_for('add_cart.add_to_cart') }}\" method=\"POST\">\r\n        <div class=\"product-card\">\r\n            <img src=\"../static/image/lathe.jfif\" alt=\"Hydraulic Press\">\r\n            <div class=\"product-info\">\r\n                <h3>Welding mask (venus 425)</h3>\r\n                <p>The Venus Welding Series is uniquely designed to provide relief from nuisance odors specifically in welding applications. </p>\r\n                <span class=\"price\">RS.56</span>\r\n                <input type=\"hidden\" name=\"product_name\" value=\"Welding mask (venus 425)\">\r\n                <input type=\"hidden\" name=\"product_price\" value=\"56\">\r\n                <div class=\"product-actions\">\r\n                    <button class=\"add-to-cart\" data-name=\"welding mask (venus 425)\" data-price=\"56\">Add to Cart</button>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n        </form>\r\n        <!-- Product Item 4 -->\r\n        <form action=\"{{ url_for('add_cart.add_to_cart') }}\" method=\"POST\">\r\n        <div class=\"product-card\">\r\n          <img src=\"../static/image/lathe.jfif\" alt=\"Hydraulic Press\">\r\n          <div class=\"product-info\">\r\n              <h3>Duracell type c type - medium</h3>\r\n              <p>Enjoy long usage durations as the Duracell batteries provide you a long-lasting performance and come with the Duralock technology to store the battery for a long period of time. </p>\r\n              <span class=\"price\">RS.98</span>\r\n              <input type=\"hidden\" name=\"product_name\" value=\"Duracell type c type - medium\">\r\n                <input type=\"hidden\" name=\"product_price\" value=\"98\">\r\n              <div class=\"product-actions\">\r\n                  <button class=\"add-to-cart\" data-name=\"Duracell type C type - medium\" data-price=\"98\">Add to Cart</button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      </form>\r\n\r\n        <!-- Add more product items as needed -->\r\n    </div>\r\n</div>\r\n\r\n\r\n        <!-- Add more products as needed -->\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n  <!-- PRODUCT SECTION END -->\r\n\r\n    <!-- FOOTER START -->\r\n    <footer>\r\n      <div class=\"container\">\r\n        <div class=\"footer-columns\">\r\n          <div class=\"footer-column\">\r\n            <h4>Company</h4>\r\n            <ul>\r\n              <li><a href=\"aboutus.html\">About Us</a></li>\r\n              <li><a href=\"privacy.html\">Privacy Policy</a></li>\r\n              <li><a href=\"terms.html\">Terms of Service</a></li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"footer-column\">\r\n            <h4>Customer Service</h4>\r\n            <ul>\r\n              <li><a href=\"contactus.html\">Contact Us</a></li>\r\n              <li><a href=\"test.html\">FAQs</a></li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"footer-column\">\r\n            <h4>Stay Connected</h4>\r\n            <p>Subscribe to our newsletter for the latest updates</p>\r\n            <input type=\"email\" placeholder=\"Enter your email\" />\r\n            <button class=\"btn-secondary\">Subscribe</button>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"footer-bottom\">\r\n          <p>&copy; 2024 Kalika Industrial eCommerce. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n    <!-- FOOTER END -->\r\n\r\n    <!-- Link to JS file -->\r\n    <script src=\"../static/js/script.js\"></script>\r\n\r\n    </body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kalika_projects-main/Kalika E-commerce/templates/index.html	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ Kalika_projects-main/Kalika E-commerce/templates/index.html	(date 1732728057947)
@@ -192,7 +192,7 @@
           </div>
         </div>
       </form>
-
+   
         <!-- Product Item 2 -->
         <form action="{{ url_for('add_cart.add_to_cart') }}" method="POST">
         <div class="product-card">
Index: Kalika_projects-main/Kalika E-commerce/db.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import psycopg2\r\nfrom tabulate import tabulate\r\nfrom datetime import datetime\r\n\r\n# Database connection parameters\r\ndb_host = '3.108.190.220'\r\ndb_name = 'ecom_prod_catalog'\r\ndb_user = 'vikas'\r\ndb_password = 'kalika1667'\r\n\r\n# Connect to your PostgreSQL database\r\ndef get_db_connection():\r\n    try:\r\n        connection = psycopg2.connect(\r\n            host=db_host,\r\n            database=db_name,\r\n            user=db_user,\r\n            password=db_password,\r\n            port='5432'\r\n        )\r\n        print(\"Database connected\")\r\n        return connection\r\n    except Exception as e:\r\n        print(f\"Database connection error: {e}\")\r\n\r\n\r\ndef view_tables_and_data():\r\n\r\n    try:\r\n        # Connect to the PostgreSQL database\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor()\r\n\r\n        # Query to get all table names\r\n        cursor.execute(\"\"\"\r\n        SELECT table_name \r\n        FROM information_schema.tables \r\n        WHERE table_schema = 'public';\r\n        \"\"\")\r\n\r\n        # Fetch and display table names\r\n        tables = cursor.fetchall()\r\n        print(\"Tables in the database:\")\r\n        for table in tables:\r\n            print(f\"- {table[0]}\")\r\n\r\n        # Ask user for a table to view data\r\n        # selected_table = input(\"\\nEnter the punchout_responses to view its data: \")\r\n\r\n        # Query to fetch data from the selected table\r\n        cursor.execute(f\"SELECT * FROM productcatalog limit 10;\")  # Limit for safety\r\n        rows = cursor.fetchall()\r\n        colnames = [desc[0] for desc in cursor.description]  # Fetch column names\r\n\r\n        # if rows:\r\n        # print(f\"\\nData from table 'users':\")\r\n        print(tabulate(rows, headers=colnames, tablefmt=\"grid\"))  # Tabular format\r\n        # else:\r\n        #     print(f\"\\nNo data found in table 'punchout_responses'.\")\r\n\r\n    except Exception as e:\r\n        print(\"Error:\", e)\r\n    finally:\r\n        # Close the cursor and connection\r\n        if cursor:\r\n            cursor.close()\r\n        if connection:\r\n            connection.close()\r\n\r\n\r\n\r\ndef create_punchout_table():\r\n    # SQL commands to drop and create the table\r\n    # drop_table_query = \"DROP TABLE IF EXISTS punchout_responses;\"\r\n    create_table_query = \"\"\"\r\n    CREATE TABLE punchout_responses (\r\n        id SERIAL PRIMARY KEY,\r\n        response TEXT NOT NULL,\r\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\r\n    );\r\n    \"\"\"\r\n\r\n    try:\r\n        # Connect to the PostgreSQL database\r\n        connection = get_db_connection()\r\n        cursor = connection.cursor()\r\n\r\n        # Drop the existing table if it exists\r\n        # cursor.execute(drop_table_query)\r\n        # print(\"Previous table 'punchout_responses' deleted successfully!\")\r\n\r\n        # Create a new table\r\n        cursor.execute(create_table_query)\r\n        connection.commit()\r\n        print(\"New table 'punchout_responses' created successfully!\")\r\n\r\n    except Exception as e:\r\n        print(\"Error while creating table:\", e)\r\n\r\n    finally:\r\n        # Close the cursor and connection\r\n        if cursor:\r\n            cursor.close()\r\n        if connection:\r\n            connection.close()\r\n\r\ndef insert_sample_data():\r\n    \"\"\"\r\n    Inserts sample data into the punchout_responses table.\r\n    \"\"\"\r\n    # Sample XML data as a string\r\n    sample_response = \"\"\"<PunchOutSetupResponse>\r\n        <Response>\r\n            <Status code=\"200\" text=\"OK\" />\r\n        </Response>\r\n        <StartPage>\r\n            <URL>https://example.com/punchout</URL>\r\n        </StartPage>\r\n    </PunchOutSetupResponse>\"\"\"\r\n\r\n    # Connect to PostgreSQL\r\n    connection = get_db_connection()\r\n    if not connection:\r\n        print(\"Failed to connect to the database.\")\r\n        return\r\n\r\n    try:\r\n        cursor = connection.cursor()\r\n\r\n        # Insert query\r\n        insert_query = \"INSERT INTO punchout_responses (response) VALUES (%s);\"\r\n\r\n        # Execute the query with the sample data\r\n        cursor.execute(insert_query, (sample_response,))\r\n        connection.commit()\r\n\r\n        print(\"Sample data inserted successfully!\")\r\n\r\n    except Exception as e:\r\n        print(\"Error while inserting sample data:\", e)\r\n\r\n    finally:\r\n        # Close the cursor and connection\r\n        if cursor:\r\n            cursor.close()\r\n        if connection:\r\n            connection.close()\r\n\r\n# Call the function\r\n# insert_sample_data()\r\n\r\n\r\n\r\n\r\ndef insert_user_data(username, email):\r\n    connection = None\r\n    cursor = None\r\n    try:\r\n        # Establishing the connection\r\n        connection = psycopg2.connect(\r\n            host=db_host,\r\n            database=db_name,\r\n            user=db_user,\r\n            password=db_password,\r\n            port='5432'\r\n        )\r\n        cursor = connection.cursor()\r\n        table=\"users2\"\r\n        # Insert new user data into users4 table\r\n        cursor.execute(f\"INSERT INTO {table} (username, email) VALUES (%s, %s);\", (username, email))\r\n        connection.commit()\r\n        print(f\"User data inserted: Username='{username}', Email='{email}'\")\r\n\r\n    except Exception as error:\r\n        print(f\"Error inserting data: {error}\")\r\n    finally:\r\n        if cursor:\r\n            cursor.close()\r\n        if connection:\r\n            connection.close()\r\n\r\n\r\ndef create_orders_table():\r\n    try:\r\n        # Connect to your PostgreSQL database\r\n        connection = psycopg2.connect(\r\n            host=db_host,\r\n            database=db_name,\r\n            user=db_user,\r\n            password=db_password,\r\n            port='5432'\r\n        )\r\n        cursor = connection.cursor()\r\n\r\n        # Create table query\r\n        create_table_query = ''' CREATE TABLE orders (\r\n                                order_id SERIAL PRIMARY KEY,                  -- Unique order ID\r\n                                customer_id INT NOT NULL,                     -- Reference to the customer who placed the order\r\n                                product_id INT NOT NULL,                      -- Reference to the product being ordered\r\n                                quantity INT NOT NULL CHECK (quantity > 0),   -- Quantity of the product\r\n                                price DECIMAL(10, 2) NOT NULL,                -- Price of the product at the time of order\r\n                                order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- Date and time the order was placed\r\n                                status VARCHAR(50) DEFAULT 'Pending',         -- Order status (e.g., 'Pending', 'Shipped', 'Delivered')\r\n                                shipping_address TEXT,                        -- Shipping address for the order\r\n                                payment_method VARCHAR(50),                   -- Payment method (e.g., 'Credit Card', 'PayPal')\r\n                                payment_status VARCHAR(50) DEFAULT 'Unpaid',  -- Payment status (e.g., 'Paid', 'Unpaid')\r\n                                shipping_date TIMESTAMP,                      -- Date the order was shipped\r\n                                delivery_date TIMESTAMP,                      -- Date the order was delivered\r\n                                CONSTRAINT fk_customer\r\n                                    FOREIGN KEY (customer_id) \r\n                                    REFERENCES customers(customer_id),        -- Foreign key to customers table\r\n                                CONSTRAINT fk_product\r\n                                    FOREIGN KEY (product_id) \r\n                                    REFERENCES products(product_id)           -- Foreign key to products table\r\n                            );\r\n                            '''\r\n\r\n        cursor.execute(create_table_query)\r\n        connection.commit()\r\n        print(\"Table 'orders' created successfully.\")\r\n\r\n    except Exception as error:\r\n        print(f\"Error creating table: {error}\")\r\n    # finally:\r\n    #     cursor.close()\r\n    #     connection.close()\r\n\r\n# def initialize_connection():\r\n        # sample_order = {\r\n        # \"user_id\": 1,\r\n        # \"order_date\": datetime.now(),\r\n        # \"total_amount\": 150.75,\r\n        # \"status\": \"Pending\",\r\n        # \"shipping_address\": \"1234 Elm Street, Springfield, IL\",\r\n        # \"payment_status\": \"Unpaid\",\r\n        # \"created_at\": datetime.now(),\r\n        # \"updated_at\": datetime.now()\r\n        # }\r\n        #\r\n        # # SQL query to insert data into the orders table\r\n        # insert_query = \"\"\"\r\n        # INSERT INTO orders (user_id, order_date, total_amount, status, shipping_address, payment_status, created_at, updated_at)\r\n        # VALUES (%s, %s, %s, %s, %s, %s, %s, %s)\r\n        # RETURNING order_id;\r\n        # \"\"\"\r\n        #\r\n        # # Connect to the PostgreSQL database\r\n        # cursor = connection.cursor()\r\n        #\r\n        # # Execute the insert query with the sample data\r\n        # cursor.execute(insert_query, (\r\n        #     sample_order[\"user_id\"],\r\n        #     sample_order[\"order_date\"],\r\n        #     sample_order[\"total_amount\"],\r\n        #     sample_order[\"status\"],\r\n        #     sample_order[\"shipping_address\"],\r\n        #     sample_order[\"payment_status\"],\r\n        #     sample_order[\"created_at\"],\r\n        #     sample_order[\"updated_at\"]\r\n        # ))\r\n        #\r\n        # # Fetch the returned order_id\r\n        # order_id = cursor.fetchone()[0]\r\n        # connection.commit()\r\n        #\r\n        # print(f\"Order inserted successfully with order_id: {order_id}\")\r\n\r\n\r\n    \r\n\r\n\r\nif __name__ == '__main__':\r\n    # insert_sample_data()\r\n    # create_punchout_table()\r\n    view_tables_and_data()\r\n    # initialize_connection()\r\n    # insert_users_data('john_doe', 'john@example.com')\r\n    # create_orders_table()\r\n    # create_punchout_table()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kalika_projects-main/Kalika E-commerce/db.py	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ Kalika_projects-main/Kalika E-commerce/db.py	(date 1732728057943)
@@ -8,6 +8,49 @@
 db_user = 'vikas'
 db_password = 'kalika1667'
 
+import psycopg2
+import pandas as pd
+from sqlalchemy import create_engine
+# Connect to the PostgreSQL database
+conn = psycopg2.connect(
+    host=db_host,
+    database=db_name,
+    user=db_user,
+    password=db_password,
+    # port=port
+)
+print("Connection successful!")
+
+# # Write query to fetch the table
+# query = "SELECT * FROM productcatalog"
+#
+# # Use Pandas to execute the query and load data into a DataFrame
+# df = pd.read_sql(query, conn)
+#
+# # Save the table to a CSV file
+# df.to_csv("productcatalog.csv", index=False)
+# print("Table saved as your_table_name.csv")
+
+# CSV file to upload
+# csv_file = "product_catlog_image_url.csv"
+# table_name = "product_catlog_image_url"  # Name of the table to save data
+
+# try:
+#     # Load the CSV into a Pandas DataFrame
+#     data = pd.read_csv(csv_file)
+#
+#     # Create a connection to the PostgreSQL database
+#     engine = create_engine(f"postgresql+psycopg2://{db_user}:{db_password}@{db_host}/{db_name}")
+#
+#     # Save the DataFrame to PostgreSQL
+#     data.to_sql(table_name, engine, index=False, if_exists="replace")  # Options: 'fail', 'replace', 'append'
+#
+#     print(f"Data from '{csv_file}' has been successfully saved to the table '{table_name}' in the database '{db_name}'.")
+#
+# except Exception as e:
+#     print(f"An error occurred: {e}")
+
+
 # Connect to your PostgreSQL database
 def get_db_connection():
     try:
@@ -48,7 +91,7 @@
         # selected_table = input("\nEnter the punchout_responses to view its data: ")
 
         # Query to fetch data from the selected table
-        cursor.execute(f"SELECT * FROM productcatalog limit 10;")  # Limit for safety
+        cursor.execute(f"SELECT * FROM product_catlog_image_url limit 10;")  # Limit for safety
         rows = cursor.fetchall()
         colnames = [desc[0] for desc in cursor.description]  # Fetch column names
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"BRANCH:main\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </select>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a259c414-5671-4a82-a49e-ce5da8045216\" name=\"Default Changelist\" comment=\"Updated with recent changes to new\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2024_10_11_PM__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2024_10_11_PM__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2b5ca36f5cd1d420ef5821d8b1ccd66e\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2b5ca36f5cd1d420ef5821d8b1ccd66e\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/d74a701418cc1fad7cad235730941d7f\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/d74a701418cc1fad7cad235730941d7f\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/testcart.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/testcart.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2nZGvCSL6VFCdtB8ibzVQG1SzmA\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"TF_FMT\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"V:\\ML_projects\\Kalika_projects1\\Kalika_projects-main\\Kalika E-commerce\\static\\js\" />\r\n      <recent name=\"V:\\ML_projects\\Kalika_projects1\\Kalika_projects-main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Autodetect\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Docutils task\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Sphinx task\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"tests\" factoryName=\"Doctests\">\r\n      <module name=\"Kalika_projects_main\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"CLASS_NAME\" value=\"\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"FOLDER_NAME\" value=\"\" />\r\n      <option name=\"TEST_TYPE\" value=\"TEST_SCRIPT\" />\r\n      <option name=\"PATTERN\" value=\"\" />\r\n      <option name=\"USE_PATTERN\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-d7ad00fb9fc3-c546a90a8094-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.23726.102\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a259c414-5671-4a82-a49e-ce5da8045216\" name=\"Default Changelist\" comment=\"Updated with recent changes to new\" />\r\n      <created>1729173412569</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729173412569</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"New version updated\">\r\n      <created>1729173470450</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729173470450</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"New version updated\">\r\n      <created>1729173488743</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729173488743</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"directory root tree  path updated\">\r\n      <created>1729173799951</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729173799954</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Deployment doc updated\">\r\n      <created>1729175165893</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729175165893</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Deployment doc updated\">\r\n      <created>1729175253785</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729175253785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Deployment doc updated\">\r\n      <created>1729175369847</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729175369847</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Deployment doc updated\">\r\n      <created>1729175499444</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729175499444</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Index pages cart &amp; login with search issues resolved\">\r\n      <created>1729184704992</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729184704992</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"New categories and subcategories working updated\">\r\n      <created>1729191531362</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729191531362</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"New categories and subcategories working updated\">\r\n      <created>1729261886533</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1729261886533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Updated with recent changes to new\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732206091006</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732206091006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Updated with recent changes to new\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732206106330</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732206106330</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Updated with search products\">\r\n      <created>1732296302218</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732296302218</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Pratiksha\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"New version updated\" />\r\n    <MESSAGE value=\"directory root tree  path updated\" />\r\n    <MESSAGE value=\"Deployment doc updated\" />\r\n    <MESSAGE value=\"Index pages cart &amp; login with search issues resolved\" />\r\n    <MESSAGE value=\"New categories and subcategories working updated\" />\r\n    <MESSAGE value=\"Updated with recent changes to new\" />\r\n    <MESSAGE value=\"Updated with search products\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated with search products\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"413\" y=\"91\" key=\"FileChooserDialogImpl\" timestamp=\"1732518078114\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"672\" />\r\n    </state>\r\n    <state x=\"413\" y=\"91\" key=\"FileChooserDialogImpl/0.0.1280.672@0.0.1280.672\" timestamp=\"1732518078114\" />\r\n    <state x=\"225\" y=\"56\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1732296304568\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"672\" />\r\n    </state>\r\n    <state x=\"225\" y=\"56\" key=\"Vcs.Push.Dialog.v2/0.0.1280.672@0.0.1280.672\" timestamp=\"1732296304568\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/app.py</url>\r\n          <line>5</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ .idea/workspace.xml	(date 1732728193492)
@@ -29,11 +29,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="a259c414-5671-4a82-a49e-ce5da8045216" name="Default Changelist" comment="Updated with recent changes to new">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2024_10_11_PM__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2024_10_11_PM__Default_Changelist_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2b5ca36f5cd1d420ef5821d8b1ccd66e" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2b5ca36f5cd1d420ef5821d8b1ccd66e" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/d74a701418cc1fad7cad235730941d7f" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/d74a701418cc1fad7cad235730941d7f" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/testcart.html" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/testcart.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/requirements.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/KALIKA_vikas.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/KALIKA_vikas.ipynb" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/app.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/db.py" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/db.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2029240f6d1128be89ddc32729463129" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/flask_session/2029240f6d1128be89ddc32729463129" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/category.html" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/category.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/Kalika_projects-main/Kalika E-commerce/templates/index.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -325,6 +328,10 @@
       <screen x="0" y="0" width="1280" height="672" />
     </state>
     <state x="225" y="56" key="Vcs.Push.Dialog.v2/0.0.1280.672@0.0.1280.672" timestamp="1732296304568" />
+    <state x="444" y="250" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1732728193480">
+      <screen x="0" y="0" width="1280" height="672" />
+    </state>
+    <state x="444" y="250" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.672@0.0.1280.672" timestamp="1732728193480" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: Kalika_projects-main/Kalika E-commerce/templates/category.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>{{ category }} Products - Kalika eCommerce</title>\r\n    <style>\r\n        /* Basic Reset */\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f9f9f9;\r\n    color: #333;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n}\r\n\r\nh1 {\r\n    font-size: 1.8em;\r\n}\r\n\r\n.back-link {\r\n    color: #fff;\r\n    text-decoration: none;\r\n}\r\n\r\n.product-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 20px;\r\n    padding: 20px;\r\n}\r\n\r\n.product-card {\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    padding: 20px;\r\n}\r\n\r\n.product-image {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-bottom: 1px solid #ddd;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.product_name {\r\n    font-size: 1.2em;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.product-description {\r\n    font-size: 0.9em;\r\n    color: #666;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.product_price {\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n    color: #333;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n}\r\n\r\n.add-to-cart {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart:hover {\r\n    background-color: #218838;\r\n}\r\n</style>\r\n\r\n</head>\r\n<body>\r\n\r\n    <header>\r\n        <h1>{{ maincategory }} Products</h1>\r\n        <a href=\"/\" class=\"back-link\">Back to Home</a>\r\n    </header>\r\n\r\n    <div class=\"product-grid\">\r\n        {% for product in products %}\r\n        <form action=\"{{ url_for('add_cart.add_to_cart') }}\" method=\"POST\" class=\"product-form\">\r\n            <div class=\"product-card\">\r\n                <img src=\"{{ product.image_url }}\" alt=\"{{ product.name }}\" class=\"product-image\">\r\n                <h3 class=\"product_name\">{{ product['productname'] }}</h3>\r\n                <p class=\"product-description\">{{ subcategory }}</p>\r\n                <span class=\"product_price\">Rs.{{ product.price | round(2) }}</span>\r\n                <input type=\"hidden\" name=\"itemcode\" value=\"{{ product['itemcode'] }}\">\r\n                <input type=\"hidden\" name=\"product_name\" value=\"{{ product['productname'] }}\">\r\n                <input type=\"hidden\" name=\"product_price\" value=\"{{ product.price | round(2) }}\">\r\n                <button type=\"submit\" class=\"add-to-cart\">Add to Cart</button>\r\n            </div>\r\n        </form>\r\n        {% endfor %}\r\n    </div>\r\n    <script src=\"../static/js/script.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kalika_projects-main/Kalika E-commerce/templates/category.html	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ Kalika_projects-main/Kalika E-commerce/templates/category.html	(date 1732728057946)
@@ -98,27 +98,59 @@
 </head>
 <body>
 
-    <header>
-        <h1>{{ maincategory }} Products</h1>
-        <a href="/" class="back-link">Back to Home</a>
-    </header>
+<header>
+    <h1>{{ maincategory }} Products</h1>
+    <a href="/" class="back-link">Back to Home</a>
+</header>
 
-    <div class="product-grid">
-        {% for product in products %}
-        <form action="{{ url_for('add_cart.add_to_cart') }}" method="POST" class="product-form">
-            <div class="product-card">
-                <img src="{{ product.image_url }}" alt="{{ product.name }}" class="product-image">
-                <h3 class="product_name">{{ product['productname'] }}</h3>
-                <p class="product-description">{{ subcategory }}</p>
-                <span class="product_price">Rs.{{ product.price | round(2) }}</span>
-                <input type="hidden" name="itemcode" value="{{ product['itemcode'] }}">
-                <input type="hidden" name="product_name" value="{{ product['productname'] }}">
-                <input type="hidden" name="product_price" value="{{ product.price | round(2) }}">
-                <button type="submit" class="add-to-cart">Add to Cart</button>
-            </div>
-        </form>
-        {% endfor %}
-    </div>
-    <script src="../static/js/script.js"></script>
+<div class="product-grid">
+    {% for product in products %}
+    <form action="{{ url_for('add_cart.add_to_cart') }}" method="POST" class="product-form">
+        <div class="product-card">
+            <img src="{{ product.image_url }}" class="product-image">
+            <h3 class="product_name">{{ product.productname }}</h3>
+            <p class="product-description">{{ product.subcategory }}</p>
+            <span class="product_price">Rs.{{ product.price | round(2) }}</span>
+            <input type="hidden" name="itemcode" value="{{ product.itemcode }}">
+            <input type="hidden" name="product_name" value="{{ product.productname }}">
+            <input type="hidden" name="product_price" value="{{ product.price | round(2) }}">
+<!--            <img src="{{ product.image_url }}" alt="{{ product.productname }}" class="product-image">-->
+            <button type="submit" class="add-to-cart">Add to Cart</button>
+        </div>
+    </form>
+    {% endfor %}
+</div>
+
+<!--<script src="../static/js/script.js"></script>-->
+<script src="{{ url_for('static', filename='js/script.js') }}"></script>
+
 </body>
-</html>
\ No newline at end of file
+</html>
+
+<!--</head>-->
+<!--<body>-->
+
+<!--    <header>-->
+<!--        <h1>{{ maincategory }} Products</h1>-->
+<!--        <a href="/" class="back-link">Back to Home</a>-->
+<!--    </header>-->
+
+<!--    <div class="product-grid">-->
+<!--        {% for product in products %}-->
+<!--        <form action="{{ url_for('add_cart.add_to_cart') }}" method="POST" class="product-form">-->
+<!--            <div class="product-card">-->
+<!--                <img src="{{ product.image_url }}" alt="{{ product.name }}" class="product-image">-->
+<!--                <h3 class="product_name">{{ product['productname'] }}</h3>-->
+<!--                <p class="product-description">{{ subcategory }}</p>-->
+<!--                <span class="product_price">Rs.{{ product.price | round(2) }}</span>-->
+<!--                <input type="hidden" name="itemcode" value="{{ product['itemcode'] }}">-->
+<!--                <input type="hidden" name="product_name" value="{{ product['productname'] }}">-->
+<!--                <input type="hidden" name="product_price" value="{{ product.price | round(2) }}">-->
+<!--                <button type="submit" class="add-to-cart">Add to Cart</button>-->
+<!--            </div>-->
+<!--        </form>-->
+<!--        {% endfor %}-->
+<!--    </div>-->
+<!--    <script src="../static/js/script.js"></script>-->
+<!--</body>-->
+<!--</html>-->
\ No newline at end of file
Index: Kalika_projects-main/KALIKA_vikas.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Kalika_projects-main/KALIKA_vikas.ipynb	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ Kalika_projects-main/KALIKA_vikas.ipynb	(date 1732728057939)
@@ -281,7 +281,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 32,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -290,16 +290,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 56,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [],
    "source": [
-    "df=pd.read_csv(\"../Kalika_projects-main/data/kalika_catalog_products.csv\")"
+    "df=pd.read_csv(\"data/kalika_catalog_products.csv\")"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 57,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [
     {
@@ -365,7 +365,7 @@
        "      <td>100.0</td>\n",
        "      <td>50.0</td>\n",
        "      <td>YES</td>\n",
-       "      <td>/20190501314/assets/items/largeimages/COTTON_G...</td>\n",
+       "      <td>COTTON_GLOVES_FOR_EPOXY_PAIR.jpg</td>\n",
        "      <td>NaN</td>\n",
        "      <td>Lead_Time - 7, length - 9 inch, Material_Type ...</td>\n",
        "    </tr>\n",
@@ -386,30 +386,30 @@
        "   Department Type  Tag  List Price  Price  Inventory  Min Order Qty  \\\n",
        "0         NaN  NaN  NaN        25.0   25.0      100.0           50.0   \n",
        "\n",
-       "  Available                                        Large Image  \\\n",
-       "0       YES  /20190501314/assets/items/largeimages/COTTON_G...   \n",
+       "  Available                       Large Image  Additional Images  \\\n",
+       "0       YES  COTTON_GLOVES_FOR_EPOXY_PAIR.jpg                NaN   \n",
        "\n",
-       "   Additional Images                                    Item Properties  \n",
-       "0                NaN  Lead_Time - 7, length - 9 inch, Material_Type ...  "
+       "                                     Item Properties  \n",
+       "0  Lead_Time - 7, length - 9 inch, Material_Type ...  "
       ]
      },
-     "execution_count": 57,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "df.head(1)"
+    "df.head(1)   "
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 58,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
     "# df[~df['Additional Images'].isna()]\n",
-    "df['Large Image']=df['Large Image'].apply(lambda x:x.replace('/20190501314/assets/items/largeimages/','./data/folder/'))\n"
+    "df['Large Image']=df['Large Image'].apply(lambda x:x.replace('/20190501314/assets/items/largeimages/',''))\n"
    ]
   },
   {
@@ -474,6 +474,431 @@
    "metadata": {},
    "outputs": [],
    "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 5,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>itemid</th>\n",
+       "      <th>maincategory</th>\n",
+       "      <th>subcategory</th>\n",
+       "      <th>itemcode</th>\n",
+       "      <th>productname</th>\n",
+       "      <th>productdescription</th>\n",
+       "      <th>price</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>201624</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>N69PC-001-0026</td>\n",
+       "      <td>COTTON GLOVES FOR EPOXY (PAIR)</td>\n",
+       "      <td>'</td>\n",
+       "      <td>25.00</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>201626</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>Gloves,Home Featured,Featured</td>\n",
+       "      <td>N69PC-001-0007</td>\n",
+       "      <td>POLYTHENE GLOVES</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>1.15</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>201627</td>\n",
+       "      <td>Hand Sleeves</td>\n",
+       "      <td>Hand Sleeves</td>\n",
+       "      <td>N69EG-019-0014</td>\n",
+       "      <td>GELCOAT HAND SLEEVE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>15.00</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>201628</td>\n",
+       "      <td>Ear Muffs</td>\n",
+       "      <td>Ear Muffs</td>\n",
+       "      <td>N69PC-001-0005MUFF</td>\n",
+       "      <td>3M EAR MUFF 1426</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>198.00</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>201632</td>\n",
+       "      <td>Respirator &amp; Accessories</td>\n",
+       "      <td>Respirator &amp; Accessories</td>\n",
+       "      <td>N69PC-001-0104</td>\n",
+       "      <td>3M? Filter Retainer 501</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>135.00</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "   itemid              maincategory                    subcategory  \\\n",
+       "0  201624                    Gloves                         Gloves   \n",
+       "1  201626                    Gloves  Gloves,Home Featured,Featured   \n",
+       "2  201627              Hand Sleeves                   Hand Sleeves   \n",
+       "3  201628                 Ear Muffs                      Ear Muffs   \n",
+       "4  201632  Respirator & Accessories       Respirator & Accessories   \n",
+       "\n",
+       "             itemcode                     productname productdescription  \\\n",
+       "0      N69PC-001-0026  COTTON GLOVES FOR EPOXY (PAIR)                  '   \n",
+       "1      N69PC-001-0007                POLYTHENE GLOVES                NaN   \n",
+       "2      N69EG-019-0014             GELCOAT HAND SLEEVE                NaN   \n",
+       "3  N69PC-001-0005MUFF               3M EAR MUFF 1426                 NaN   \n",
+       "4      N69PC-001-0104         3M? Filter Retainer 501                NaN   \n",
+       "\n",
+       "    price  \n",
+       "0   25.00  \n",
+       "1    1.15  \n",
+       "2   15.00  \n",
+       "3  198.00  \n",
+       "4  135.00  "
+      ]
+     },
+     "execution_count": 5,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.read_csv('productcatalog.csv')\n",
+    "data.head()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(3020, 7)"
+      ]
+     },
+     "execution_count": 9,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.shape"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 6,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "SyntaxError",
+     "evalue": "incomplete input (3173925101.py, line 8)",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[1;36m  Cell \u001b[1;32mIn[6], line 8\u001b[1;36m\u001b[0m\n\u001b[1;33m    df.set_index('Item Code')['Large Image']\u001b[0m\n\u001b[1;37m                                            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m incomplete input\n"
+     ]
+    }
+   ],
+   "source": [
+    "# Ensure column names are consistent and trimmed of leading/trailing spaces\n",
+    "df.columns = df.columns.str.strip()\n",
+    "data.columns = data.columns.str.strip()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 7,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# Perform the mapping\n",
+    "# Map the 'Large Image' from df to 'image_url' in data based on 'Item Code' and 'itemcode'\n",
+    "data['image_url'] = data['itemcode'].map(df.set_index('Item Code')['Large Image'])"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>itemid</th>\n",
+       "      <th>maincategory</th>\n",
+       "      <th>subcategory</th>\n",
+       "      <th>itemcode</th>\n",
+       "      <th>productname</th>\n",
+       "      <th>productdescription</th>\n",
+       "      <th>price</th>\n",
+       "      <th>image_url</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>201624</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>N69PC-001-0026</td>\n",
+       "      <td>COTTON GLOVES FOR EPOXY (PAIR)</td>\n",
+       "      <td>'</td>\n",
+       "      <td>25.00</td>\n",
+       "      <td>COTTON_GLOVES_FOR_EPOXY_PAIR.jpg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>201626</td>\n",
+       "      <td>Gloves</td>\n",
+       "      <td>Gloves,Home Featured,Featured</td>\n",
+       "      <td>N69PC-001-0007</td>\n",
+       "      <td>POLYTHENE GLOVES</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>1.15</td>\n",
+       "      <td>POLYTHENE_GLOVES_1.jpg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>201627</td>\n",
+       "      <td>Hand Sleeves</td>\n",
+       "      <td>Hand Sleeves</td>\n",
+       "      <td>N69EG-019-0014</td>\n",
+       "      <td>GELCOAT HAND SLEEVE</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>15.00</td>\n",
+       "      <td>GELCOAT_HAND_SLEEVE.jpg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>201628</td>\n",
+       "      <td>Ear Muffs</td>\n",
+       "      <td>Ear Muffs</td>\n",
+       "      <td>N69PC-001-0005MUFF</td>\n",
+       "      <td>3M EAR MUFF 1426</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>198.00</td>\n",
+       "      <td>3M_EAR_MUFF_1426.jpg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>201632</td>\n",
+       "      <td>Respirator &amp; Accessories</td>\n",
+       "      <td>Respirator &amp; Accessories</td>\n",
+       "      <td>N69PC-001-0104</td>\n",
+       "      <td>3M? Filter Retainer 501</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>135.00</td>\n",
+       "      <td>3M_Filter_Retainer_5011.jpg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>...</th>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "      <td>...</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3015</th>\n",
+       "      <td>205083</td>\n",
+       "      <td>Facility Maintenance</td>\n",
+       "      <td>Facility Maintenance,Home,System,menu1,Shop</td>\n",
+       "      <td>N37MUCONTR09</td>\n",
+       "      <td>M12 male / M12 male 90° shielded Cube67 PUR 0....</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>5123.00</td>\n",
+       "      <td>images.jfif</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3016</th>\n",
+       "      <td>205087</td>\n",
+       "      <td>Hand &amp; Power Tools</td>\n",
+       "      <td>Hand &amp; Power Tools,Home,System,menu1,Shop</td>\n",
+       "      <td>N51HARDWRITEM414</td>\n",
+       "      <td>TOOLS TROLLEY 7 DRAWER</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>27429.00</td>\n",
+       "      <td>tools_trolley.png</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3017</th>\n",
+       "      <td>205088</td>\n",
+       "      <td>Chemicals &amp; Lubricants</td>\n",
+       "      <td>Chemicals &amp; Lubricants,Home,System,menu1,Shop</td>\n",
+       "      <td>N35EM-037-0090</td>\n",
+       "      <td>Pump head assembly Make-Watson Marlow tube wal...</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>87937.00</td>\n",
+       "      <td>pdm-wmpumps-520re-pumphead.webp</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3018</th>\n",
+       "      <td>205089</td>\n",
+       "      <td>Facility Maintenance</td>\n",
+       "      <td>Facility Maintenance,Home,System,menu1,Shop</td>\n",
+       "      <td>N31-ANGLECP825CT</td>\n",
+       "      <td>CP MAKE 1/4'' ANGLE RATCHET CP825CT</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>15488.00</td>\n",
+       "      <td>images.jpeg</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3019</th>\n",
+       "      <td>205091</td>\n",
+       "      <td>Facility Maintenance</td>\n",
+       "      <td>Facility Maintenance,Home,System,menu1,Shop</td>\n",
+       "      <td>N31-ANGLECP825C</td>\n",
+       "      <td>CP MAKE 1/2'' ANGLE RATCHET CP825C</td>\n",
+       "      <td>NaN</td>\n",
+       "      <td>13888.00</td>\n",
+       "      <td>cp824-chicago-pneumatic-1-4-ratchet-wrench-600...</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "<p>3020 rows × 8 columns</p>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "      itemid              maincategory  \\\n",
+       "0     201624                    Gloves   \n",
+       "1     201626                    Gloves   \n",
+       "2     201627              Hand Sleeves   \n",
+       "3     201628                 Ear Muffs   \n",
+       "4     201632  Respirator & Accessories   \n",
+       "...      ...                       ...   \n",
+       "3015  205083      Facility Maintenance   \n",
+       "3016  205087        Hand & Power Tools   \n",
+       "3017  205088    Chemicals & Lubricants   \n",
+       "3018  205089      Facility Maintenance   \n",
+       "3019  205091      Facility Maintenance   \n",
+       "\n",
+       "                                        subcategory            itemcode  \\\n",
+       "0                                            Gloves      N69PC-001-0026   \n",
+       "1                     Gloves,Home Featured,Featured      N69PC-001-0007   \n",
+       "2                                      Hand Sleeves      N69EG-019-0014   \n",
+       "3                                         Ear Muffs  N69PC-001-0005MUFF   \n",
+       "4                          Respirator & Accessories      N69PC-001-0104   \n",
+       "...                                             ...                 ...   \n",
+       "3015    Facility Maintenance,Home,System,menu1,Shop        N37MUCONTR09   \n",
+       "3016      Hand & Power Tools,Home,System,menu1,Shop    N51HARDWRITEM414   \n",
+       "3017  Chemicals & Lubricants,Home,System,menu1,Shop      N35EM-037-0090   \n",
+       "3018    Facility Maintenance,Home,System,menu1,Shop    N31-ANGLECP825CT   \n",
+       "3019    Facility Maintenance,Home,System,menu1,Shop     N31-ANGLECP825C   \n",
+       "\n",
+       "                                            productname productdescription  \\\n",
+       "0                        COTTON GLOVES FOR EPOXY (PAIR)                  '   \n",
+       "1                                      POLYTHENE GLOVES                NaN   \n",
+       "2                                   GELCOAT HAND SLEEVE                NaN   \n",
+       "3                                     3M EAR MUFF 1426                 NaN   \n",
+       "4                               3M? Filter Retainer 501                NaN   \n",
+       "...                                                 ...                ...   \n",
+       "3015  M12 male / M12 male 90° shielded Cube67 PUR 0....                NaN   \n",
+       "3016                             TOOLS TROLLEY 7 DRAWER                NaN   \n",
+       "3017  Pump head assembly Make-Watson Marlow tube wal...                NaN   \n",
+       "3018                CP MAKE 1/4'' ANGLE RATCHET CP825CT                NaN   \n",
+       "3019                 CP MAKE 1/2'' ANGLE RATCHET CP825C                NaN   \n",
+       "\n",
+       "         price                                          image_url  \n",
+       "0        25.00                   COTTON_GLOVES_FOR_EPOXY_PAIR.jpg  \n",
+       "1         1.15                             POLYTHENE_GLOVES_1.jpg  \n",
+       "2        15.00                            GELCOAT_HAND_SLEEVE.jpg  \n",
+       "3       198.00                               3M_EAR_MUFF_1426.jpg  \n",
+       "4       135.00                        3M_Filter_Retainer_5011.jpg  \n",
+       "...        ...                                                ...  \n",
+       "3015   5123.00                                        images.jfif  \n",
+       "3016  27429.00                                  tools_trolley.png  \n",
+       "3017  87937.00                    pdm-wmpumps-520re-pumphead.webp  \n",
+       "3018  15488.00                                        images.jpeg  \n",
+       "3019  13888.00  cp824-chicago-pneumatic-1-4-ratchet-wrench-600...  \n",
+       "\n",
+       "[3020 rows x 8 columns]"
+      ]
+     },
+     "execution_count": 8,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "data.to_csv('product_catlog_image_url.csv', index=False)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
   }
  ],
  "metadata": {
@@ -492,7 +917,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.9.4"
+   "version": "3.12.4"
   }
  },
  "nbformat": 4,
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.12\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PyCharmProfessionalAdvertiser\">\r\n    <option name=\"shown\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision b786d2943c004d4f41c8997bbc848becea3b3fec)
+++ .idea/misc.xml	(date 1732728057871)
@@ -1,5 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Python 3.12" />
+  </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
   <component name="PyCharmProfessionalAdvertiser">
     <option name="shown" value="true" />
diff --git Kalika_projects-main/Kalika E-commerce/requirements.txt Kalika_projects-main/Kalika E-commerce/requirements.txt
new file mode 100644
